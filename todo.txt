1.Define core functionality
A todo app. The user will be able to add, delete, check off todo items
todo items will have properties to describe and organise them
    Properties - At a minimum they should have a title, description, dueDate and priority. You might also want to include notes or even a checklist.
todos should be able to be placed in seperate lists (like projects)
When user first opens the app there should be a inbox project or list where all todos are put
User should be able to create new projects and move their todos there
Due date should be optional
There should be a button to add a new task easily from anywhere in the app(quick add)
clicking into a task should open it up to edit properties (and delete it)
each task should have a delete button 
each task should have a button to add a due date
each task should have an eisenhower matrix prioriry system that by default is D on the matrix 
    - Eisenhower Matrix (important and urgent, important not urgent, not important but urgent, not important not urgent)
User should be able to filter tasks by project, prioriry and due date.
next to each todo should be a check box
Checked off tasks should be able to be unchecked
Checked off tasks should be able to be deleted with delete button next to crossed out task
due date should display next to side of todo if added


2. Model
https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API Use localStorage from Web Storage API

Data to save
    - projects
        - Just separate lists
    - todos
        - object with title, description, dueDate, prioriry. 
        - Very similar to menu items from my restaurant project except more interactivity
        - Task states - todo or done

Update listeners when projects are added or deleted
Update listeners when tasks are added, deleted, or altered.
send data to local storage as JSON (another listener?)

        
3. View
Follow accessability design (look this up)
Sidebar (sticky) and main area to render task objects
User info at top
Sidebar will have add task button
inbox
projects list
Main area will render tasks depending on if inbox or project is selected
task are collapsible
task has checkbox next to it
checked tasks will be rendered at bottom crossed out
crossed out tasks will have a delete button
crossed out tasks rendered from task state (done)
Projects has add button next to it
clicking project in sidebar renders tasks only in that project


4. Controller
handles user input and adds data to model


5. Design the app layout
Keep it simple, sidebar and main area for rendering tasks within each project
have button show what tab the user is on with perma pushed down like what ryan said


Notes   
Implement subtasks later?
Implement colour picker on projects
What am I trying to learn here? - SOLID principles, using local storage, Modular programming, JSON, collapsible menus (style), dark mode and light mode.
